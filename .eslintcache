[{"D:\\react\\github-jobs\\src\\index.js":"1","D:\\react\\github-jobs\\src\\components\\App.js":"2","D:\\react\\github-jobs\\src\\components\\useFetchJobs.js":"3","D:\\react\\github-jobs\\src\\components\\Job.js":"4","D:\\react\\github-jobs\\src\\components\\JobsPagination.js":"5","D:\\react\\github-jobs\\src\\components\\SearchForm.js":"6","D:\\react\\github-jobs\\src\\components\\style.js":"7"},{"size":174,"mtime":1608037819110,"results":"8","hashOfConfig":"9"},{"size":2339,"mtime":1608481191808,"results":"10","hashOfConfig":"9"},{"size":2293,"mtime":1608481447347,"results":"11","hashOfConfig":"9"},{"size":1923,"mtime":1608219322970,"results":"12","hashOfConfig":"9"},{"size":822,"mtime":1608190472724,"results":"13","hashOfConfig":"9"},{"size":1412,"mtime":1608218068479,"results":"14","hashOfConfig":"9"},{"size":828,"mtime":1608481303073,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1k0ftf3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\github-jobs\\src\\index.js",[],["33","34"],"D:\\react\\github-jobs\\src\\components\\App.js",["35","36","37"],"import React, { useState } from \"react\";\r\nimport useFetchJobs from \"./useFetchJobs\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Job from \"./Job\";\r\nimport JobsPagination from \"./JobsPagination\";\r\nimport gitlogo from \"./gitlogo2.png\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport {\r\n  HeroContainer,\r\n  HeroContainer1,\r\n  HeroContainer2,\r\n  Loading,\r\n} from \"./style\";\r\nimport style from \"styled-components\";\r\nimport Back from \"./loading11.jpg\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Pa = style.div`\r\nbackground: linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.1)),\r\n    url(${Back});\r\n`;\r\n\r\nconst center = style.div`\r\ntext-align: center\r\n`;\r\n\r\nexport default function App() {\r\n  const [params, setParams] = useState({\r\n    description: \"\",\r\n    location: \"\",\r\n    full_time: false,\r\n  });\r\n  const [page, setPage] = useState(1);\r\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\r\n\r\n  function handleParamChange(e) {\r\n    const param = e.target.name;\r\n    const value = e.target.value;\r\n    setPage(1);\r\n    setParams((prevParams) => {\r\n      return { ...prevParams, [param]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Loading>\r\n      {loading && <h1 style={{ color: \"yellow\" }}>Loading...</h1>}\r\n\r\n      <Container className=\"my-4\">\r\n        <HeroContainer>\r\n          <img\r\n            className=\"d-md-block\"\r\n            height=\"75\"\r\n            width=\"170\"\r\n            alt=\"Github Jobs\"\r\n            src={gitlogo}\r\n          />\r\n\r\n          <SearchForm params={params} onParamChange={handleParamChange} />\r\n          <center>\r\n            {error && <h1 style={{ color: \"yellow\" }}>Try Refreshing</h1>}\r\n          </center>\r\n          <JobsPagination\r\n            page={page}\r\n            setPage={setPage}\r\n            hasNextPage={hasNextPage}\r\n          />\r\n        </HeroContainer>\r\n        <Pa>\r\n          {jobs.map((job) => {\r\n            return <Job key={job.id} job={job} />;\r\n          })}\r\n        </Pa>\r\n\r\n        <pag>\r\n          <JobsPagination\r\n            page={page}\r\n            setPage={setPage}\r\n            hasNextPage={hasNextPage}\r\n          />\r\n        </pag>\r\n      </Container>\r\n    </Loading>\r\n  );\r\n}\r\n\r\n//<JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\r\n//{loading && <h1 style={{color:\"yellow\"}}>loading...</h1>}\r\n","D:\\react\\github-jobs\\src\\components\\useFetchJobs.js",[],"D:\\react\\github-jobs\\src\\components\\Job.js",["38"],"import React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Badge, Button, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Ig from './loading11.jpg';\r\n\r\n\r\nfunction Job({ job }) {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        \r\n        <Card className=\"mb-3\">\r\n            <Card.Body>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className=\"text-muted mb-2\">\r\n                            {new Date(job.created_at).toLocaleDateString()}\r\n                        </Card.Subtitle>\r\n                        <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\r\n                        <Badge variant=\"secondary\">{job.location}</Badge>\r\n                        <div style={{ wordBreak: 'break-all' }}>\r\n                            <ReactMarkdown source={job.how_to_apply} />\r\n                        </div>\r\n                    </div>\r\n                    <img className=\"d-md-block\" height=\"50\"\r\n                        alt={job.company} src={job.company_logo} />\r\n                </div>\r\n                <Card.Text>\r\n                    <Button onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                        variant=\"primary\">\r\n                        {open ? 'Hide Details' : 'View Details'}\r\n                    </Button>\r\n                </Card.Text>\r\n                <Collapse in={open}>\r\n                    <div className=\"mt-4\">\r\n                        <ReactMarkdown source={job.description} />\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Job\r\n","D:\\react\\github-jobs\\src\\components\\JobsPagination.js",[],"D:\\react\\github-jobs\\src\\components\\SearchForm.js",[],"D:\\react\\github-jobs\\src\\components\\style.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":10,"column":3,"nodeType":"45","messageId":"46","endLine":10,"endColumn":17},{"ruleId":"43","severity":1,"message":"47","line":11,"column":3,"nodeType":"45","messageId":"46","endLine":11,"endColumn":17},{"ruleId":"43","severity":1,"message":"48","line":16,"column":8,"nodeType":"45","messageId":"46","endLine":16,"endColumn":14},{"ruleId":"43","severity":1,"message":"49","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":10},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'HeroContainer1' is defined but never used.","Identifier","unusedVar","'HeroContainer2' is defined but never used.","'styled' is defined but never used.","'Ig' is defined but never used.","no-global-assign","no-unsafe-negation"]